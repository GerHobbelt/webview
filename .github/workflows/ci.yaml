name: CI Pipeline
on: [push]

jobs:

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install libwebkit2gtk-4.0-dev xvfb -y
      - name: Build and run tests
        run: xvfb-run ./script/build.sh
      - uses: actions/upload-artifact@v1
        with:
          name: build_linux
          path: ./build/


  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build and run tests
        run: ./script/build.sh
      - uses: actions/upload-artifact@v1
        with:
          name: build_macos
          path: ./build/


  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build and run tests
        run: ./script/build.bat
      - uses: actions/upload-artifact@v1
        with:
          name: build_windows
          path: ./build/

  release:
    runs-on: ubuntu-latest
    needs: [build-linux,build-windows,build-macos]
    steps:
     
      - uses: actions/download-artifact@v1
        with:
          name: build_macos
      - run: tar zcvf build_macos.tar.gz build_macos/

      - uses: actions/download-artifact@v1
        with:
          name: build_windows
      - run: tar zcvf build_windows.tar.gz build_windows/

      - uses: actions/download-artifact@v1
        with:
          name: build_linux
      - run: tar zcvf build_linux.tar.gz build_linux/


      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v0.0
          release_name: Release v0.0
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: true
          prerelease: true


      - name: Upload Release Asset OSX
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./build_macos.tar.gz
          asset_name: build_macos.tar.gz
          asset_content_type: application/x-gzip     

      - name: Upload Release Asset Win
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./build_windows.tar.gz
          asset_name: build_windows.tar.gz
          asset_content_type: application/x-gzip

      - name: Upload Release Asset Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./build_linux.tar.gz
          asset_name: build_linux.tar.gz
          asset_content_type: application/x-gzip